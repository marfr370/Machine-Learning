set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
pred <- predict(nn, valid)
data_frame <- data.frame(x1=valid$Var,
y1=valid$Sin,
x2=valid$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
pdf("3.pdf")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Valid'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 3
set.seed(1234567890)
Var <- runif(500, 0, 10)
n_layers=1
n_hidden=c(6)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ ., data=train, linear.output = TRUE, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
x2=train$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
set.seed(1234567890)
Var <- runif(500, 0, 10)
sin <- data.frame(Var, Sin=sin(Var))
train <- sin[1:25,] # Training
test <- sin[26:500,] # Test
# Random initialization of the weights in the interval [-1, 1]
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Sin ~ ., data=train, hidden=n_hidden, startweights=winit)
# Plot of the training data (black), test data (blue), and predictions (red)
pred <- predict(nn, test)
data_frame <- data.frame(x1=train$Var,
y1=train$Sin,
x2=test$Var,
y2=pred[,1],
x3=test$Var,
y3=test$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Train'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x3, y=y3, color='Test'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
library(neuralnet)
library(ggplot2)
# TASK 1
set.seed(1234567890)
Var <- runif(500, 0, 10)
sin <- data.frame(Var, Sin=sin(Var))
train <- sin[1:25,] # Training
test <- sin[26:500,] # Test
# Random initialization of the weights in the interval [-1, 1]
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Sin ~ ., data=train, hidden=n_hidden, startweights=winit)
# Plot of the training data (black), test data (blue), and predictions (red)
pred <- predict(nn, test)
data_frame <- data.frame(x1=train$Var,
y1=train$Sin,
x2=test$Var,
y2=pred[,1],
x3=test$Var,
y3=test$Sin)
pdf('1.pdf')
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Train'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x3, y=y3, color='Test'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 2
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
pred <- predict(nn, valid)
data_frame <- data.frame(x1=valid$Var,
y1=valid$Sin,
x2=valid$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
pdf("3.pdf")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Valid'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 3
set.seed(1234567890)
Var <- runif(500, 0, 10)
n_layers=1
n_hidden=c(6)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
#winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
winit <- runif(n_layers, -1, 1)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
set.seed(1234567890)
Var <- runif(500, 0, 10)
sin <- data.frame(Var, Sin=sin(Var))
train <- sin[1:25,] # Training
test <- sin[26:500,] # Test
# Random initialization of the weights in the interval [-1, 1]
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
#winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
winit <- runif(n_layers, -1, 1)
nn <- neuralnet(Sin ~ ., data=train, hidden=n_hidden, startweights=winit)
# Plot of the training data (black), test data (blue), and predictions (red)
pred <- predict(nn, test)
data_frame <- data.frame(x1=train$Var,
y1=train$Sin,
x2=test$Var,
y2=pred[,1],
x3=test$Var,
y3=test$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Train'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x3, y=y3, color='Test'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
winit
set.seed(1234567890)
Var <- runif(500, 0, 10)
sin <- data.frame(Var, Sin=sin(Var))
train <- sin[1:25,] # Training
test <- sin[26:500,] # Test
# Random initialization of the weights in the interval [-1, 1]
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
#winit <- runif(n_layers, -1, 1)
nn <- neuralnet(Sin ~ ., data=train, hidden=n_hidden, startweights=winit)
# Plot of the training data (black), test data (blue), and predictions (red)
pred <- predict(nn, test)
data_frame <- data.frame(x1=train$Var,
y1=train$Sin,
x2=test$Var,
y2=pred[,1],
x3=test$Var,
y3=test$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Train'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x3, y=y3, color='Test'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
winit
runif(n_layers, -1, 1)
runif(n_layers, -1, 1)
runif(n_layers, -1, 1)
runif(n_layers, -1, 1)
runif(n_layers, -1, 1)
library(neuralnet)
library(ggplot2)
# TASK 3
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=2
n_hidden=c(6)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
n_hidden=c(3)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
n_layers=1
n_hidden=c(3)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
x2=train$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
x2=valid$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
pred
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
y2=valid$Sin,
x2=pred[,1],
x3=train$Var,
y3=train$Sin)
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
pred
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, colour="black") +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, colour="blue") +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2, colour="black") +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21, colour="red") +
labs(color="") + xlab("x") + ylab("y")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(neuralnet)
library(ggplot2)
# TASK 1
set.seed(1234567890)
Var <- runif(500, 0, 10)
sin <- data.frame(Var, Sin=sin(Var))
train <- sin[1:25,]
test <- sin[26:500,]
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Sin ~ ., data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, test)
data_frame <- data.frame(x1=train$Var,
y1=train$Sin,
x2=test$Var,
y2=pred[,1],
x3=test$Var,
y3=test$Sin)
pdf('1.pdf')
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Training'), fill=NA, shape=21, size=4, colour="black") +
geom_point(aes(x=x3, y=y3, color='Testing'), fill=NA, shape=21, size=2, colour="blue") +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21, colour="red") +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 2
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
pred <- predict(nn, valid)
data_frame <- data.frame(x1=valid$Var,
y1=valid$Sin,
x2=valid$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
pdf("3.pdf")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, size=2, colour="blue") +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=4, colour="black") +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21, colour="red") +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 3
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=1
n_hidden=c(3)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
y2=valid$Sin,
x2=pred[,1],
x3=train$Var,
y3=train$Sin)
pdf("4.pdf")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, colour="blue") +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2, colour="black") +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21, colour="red") +
labs(color="") + xlab("x") + ylab("y")
dev.off()
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2, colour="black") +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21, colour="red") +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'red', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(neuralnet)
library(ggplot2)
# TASK 1
set.seed(1234567890)
Var <- runif(500, 0, 10)
sin <- data.frame(Var, Sin=sin(Var))
train <- sin[1:25,]
test <- sin[26:500,]
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Sin ~ ., data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, test)
data_frame <- data.frame(x1=train$Var,
y1=train$Sin,
x2=test$Var,
y2=pred[,1],
x3=test$Var,
y3=test$Sin)
pdf('1.pdf')
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Training'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x3, y=y3, color='Testing'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Testing" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 2
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
pred <- predict(nn, valid)
data_frame <- data.frame(x1=valid$Var,
y1=valid$Sin,
x2=valid$Var,
y2=pred[,1],
x3=train$Var,
y3=train$Sin)
pdf("3.pdf")
ggplot(data_frame) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=4) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
# TASK 3
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=1
n_hidden=c(3)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
y2=valid$Sin,
x2=pred[,1],
x3=train$Var,
y3=train$Sin)
pdf("4.pdf")
ggplot(data_frame) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=2
n_hidden=c(5,7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
y2=valid$Sin,
x2=pred[,1],
x3=train$Var,
y3=train$Sin)
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=1
n_hidden=c(7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
y2=valid$Sin,
x2=pred[,1],
x3=train$Var,
y3=train$Sin)
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=1
n_hidden=c(7)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
nn
set.seed(1234567890)
Var <- runif(500, 0, 10)
train <- data.frame(Var, Sin=sin(Var))
set.seed(1234567890)
Var <- runif(500, 0, 20)
valid <- data.frame(Var, Sin=sin(Var))
n_layers=1
n_hidden=c(6)
set.seed(1234567890)
winit <- sample(x = seq(from=-1, to=1, by=0.01), size=n_layers)
nn <- neuralnet(Var ~ Sin, data=train, hidden=n_hidden, startweights=winit)
pred <- predict(nn, newdata=valid)
data_frame <- data.frame(x1=valid$Var, y1=valid$Sin,
y2=valid$Sin,
x2=pred[,1],
x3=train$Var,
y3=train$Sin)
ggplot(data_frame) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
pdf("4.pdf")
ggplot(data_frame) +
geom_point(aes(x=x3, y=y3, color='Training'), fill=NA, shape=21, size=2) +
geom_point(aes(x=x1, y=y1, color='Validation'), fill=NA, shape=21) +
geom_point(aes(x=x2, y=y2, color='Prediction'), fill=NA, shape=21) +
scale_color_manual(values = c("Validation" = 'blue', 'Training' = 'black', 'Prediction' = 'red')) +
labs(color="") + xlab("x") + ylab("y")
dev.off()
print(nn)
plot(nn)
dev.off()
dev.off()
